// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: gameserver/server.proto

package gameserver

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ArcadeState_Result int32

const (
	ArcadeState_RESULT_UNSPECIFIED ArcadeState_Result = 0
	ArcadeState_RESULT_WON         ArcadeState_Result = 1
	ArcadeState_RESULT_LOST        ArcadeState_Result = 2
)

// Enum value maps for ArcadeState_Result.
var (
	ArcadeState_Result_name = map[int32]string{
		0: "RESULT_UNSPECIFIED",
		1: "RESULT_WON",
		2: "RESULT_LOST",
	}
	ArcadeState_Result_value = map[string]int32{
		"RESULT_UNSPECIFIED": 0,
		"RESULT_WON":         1,
		"RESULT_LOST":        2,
	}
)

func (x ArcadeState_Result) Enum() *ArcadeState_Result {
	p := new(ArcadeState_Result)
	*p = x
	return p
}

func (x ArcadeState_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArcadeState_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_gameserver_server_proto_enumTypes[0].Descriptor()
}

func (ArcadeState_Result) Type() protoreflect.EnumType {
	return &file_gameserver_server_proto_enumTypes[0]
}

func (x ArcadeState_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArcadeState_Result.Descriptor instead.
func (ArcadeState_Result) EnumDescriptor() ([]byte, []int) {
	return file_gameserver_server_proto_rawDescGZIP(), []int{7, 0}
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_gameserver_server_proto_rawDescGZIP(), []int{0}
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_gameserver_server_proto_rawDescGZIP(), []int{1}
}

type ClientEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeysPressed *ClientEvent_KeysPressed `protobuf:"bytes,1,opt,name=keys_pressed,json=keysPressed,proto3" json:"keys_pressed,omitempty"`
}

func (x *ClientEvent) Reset() {
	*x = ClientEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientEvent) ProtoMessage() {}

func (x *ClientEvent) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientEvent.ProtoReflect.Descriptor instead.
func (*ClientEvent) Descriptor() ([]byte, []int) {
	return file_gameserver_server_proto_rawDescGZIP(), []int{2}
}

func (x *ClientEvent) GetKeysPressed() *ClientEvent_KeysPressed {
	if x != nil {
		return x.KeysPressed
	}
	return nil
}

type ClientEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event    *ClientEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Checksum string       `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
}

func (x *ClientEventRequest) Reset() {
	*x = ClientEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientEventRequest) ProtoMessage() {}

func (x *ClientEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientEventRequest.ProtoReflect.Descriptor instead.
func (*ClientEventRequest) Descriptor() ([]byte, []int) {
	return file_gameserver_server_proto_rawDescGZIP(), []int{3}
}

func (x *ClientEventRequest) GetEvent() *ClientEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *ClientEventRequest) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type EngineSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EngineSnapshot) Reset() {
	*x = EngineSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngineSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineSnapshot) ProtoMessage() {}

func (x *EngineSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineSnapshot.ProtoReflect.Descriptor instead.
func (*EngineSnapshot) Descriptor() ([]byte, []int) {
	return file_gameserver_server_proto_rawDescGZIP(), []int{4}
}

func (x *EngineSnapshot) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DialogState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Finished bool   `protobuf:"varint,1,opt,name=finished,proto3" json:"finished,omitempty"`
	GaveItem bool   `protobuf:"varint,2,opt,name=gave_item,json=gaveItem,proto3" json:"gave_item,omitempty"`
	Text     string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *DialogState) Reset() {
	*x = DialogState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialogState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialogState) ProtoMessage() {}

func (x *DialogState) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialogState.ProtoReflect.Descriptor instead.
func (*DialogState) Descriptor() ([]byte, []int) {
	return file_gameserver_server_proto_rawDescGZIP(), []int{5}
}

func (x *DialogState) GetFinished() bool {
	if x != nil {
		return x.Finished
	}
	return false
}

func (x *DialogState) GetGaveItem() bool {
	if x != nil {
		return x.GaveItem
	}
	return false
}

func (x *DialogState) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Color struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R uint32 `protobuf:"varint,1,opt,name=r,proto3" json:"r,omitempty"`
	G uint32 `protobuf:"varint,2,opt,name=g,proto3" json:"g,omitempty"`
	B uint32 `protobuf:"varint,3,opt,name=b,proto3" json:"b,omitempty"`
	A uint32 `protobuf:"varint,4,opt,name=a,proto3" json:"a,omitempty"`
}

func (x *Color) Reset() {
	*x = Color{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Color) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Color) ProtoMessage() {}

func (x *Color) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Color.ProtoReflect.Descriptor instead.
func (*Color) Descriptor() ([]byte, []int) {
	return file_gameserver_server_proto_rawDescGZIP(), []int{6}
}

func (x *Color) GetR() uint32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *Color) GetG() uint32 {
	if x != nil {
		return x.G
	}
	return 0
}

func (x *Color) GetB() uint32 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *Color) GetA() uint32 {
	if x != nil {
		return x.A
	}
	return 0
}

type ArcadeState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ArcadeState_Result `protobuf:"varint,1,opt,name=result,proto3,enum=gameserver.ArcadeState_Result" json:"result,omitempty"`
	Screen []*Color           `protobuf:"bytes,2,rep,name=screen,proto3" json:"screen,omitempty"`
}

func (x *ArcadeState) Reset() {
	*x = ArcadeState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArcadeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArcadeState) ProtoMessage() {}

func (x *ArcadeState) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArcadeState.ProtoReflect.Descriptor instead.
func (*ArcadeState) Descriptor() ([]byte, []int) {
	return file_gameserver_server_proto_rawDescGZIP(), []int{7}
}

func (x *ArcadeState) GetResult() ArcadeState_Result {
	if x != nil {
		return x.Result
	}
	return ArcadeState_RESULT_UNSPECIFIED
}

func (x *ArcadeState) GetScreen() []*Color {
	if x != nil {
		return x.Screen
	}
	return nil
}

type GameEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DialogState *DialogState `protobuf:"bytes,1,opt,name=dialog_state,json=dialogState,proto3" json:"dialog_state,omitempty"`
	ArcadeState *ArcadeState `protobuf:"bytes,2,opt,name=arcade_state,json=arcadeState,proto3" json:"arcade_state,omitempty"`
}

func (x *GameEvent) Reset() {
	*x = GameEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent) ProtoMessage() {}

func (x *GameEvent) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent.ProtoReflect.Descriptor instead.
func (*GameEvent) Descriptor() ([]byte, []int) {
	return file_gameserver_server_proto_rawDescGZIP(), []int{8}
}

func (x *GameEvent) GetDialogState() *DialogState {
	if x != nil {
		return x.DialogState
	}
	return nil
}

func (x *GameEvent) GetArcadeState() *ArcadeState {
	if x != nil {
		return x.ArcadeState
	}
	return nil
}

type ServerEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*ServerEvent_Snapshot
	//	*ServerEvent_GameEvent
	Event isServerEvent_Event `protobuf_oneof:"event"`
}

func (x *ServerEvent) Reset() {
	*x = ServerEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerEvent) ProtoMessage() {}

func (x *ServerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerEvent.ProtoReflect.Descriptor instead.
func (*ServerEvent) Descriptor() ([]byte, []int) {
	return file_gameserver_server_proto_rawDescGZIP(), []int{9}
}

func (m *ServerEvent) GetEvent() isServerEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *ServerEvent) GetSnapshot() *EngineSnapshot {
	if x, ok := x.GetEvent().(*ServerEvent_Snapshot); ok {
		return x.Snapshot
	}
	return nil
}

func (x *ServerEvent) GetGameEvent() *GameEvent {
	if x, ok := x.GetEvent().(*ServerEvent_GameEvent); ok {
		return x.GameEvent
	}
	return nil
}

type isServerEvent_Event interface {
	isServerEvent_Event()
}

type ServerEvent_Snapshot struct {
	Snapshot *EngineSnapshot `protobuf:"bytes,1,opt,name=snapshot,proto3,oneof"`
}

type ServerEvent_GameEvent struct {
	GameEvent *GameEvent `protobuf:"bytes,2,opt,name=game_event,json=gameEvent,proto3,oneof"`
}

func (*ServerEvent_Snapshot) isServerEvent_Event() {}

func (*ServerEvent_GameEvent) isServerEvent_Event() {}

type InventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InventoryRequest) Reset() {
	*x = InventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryRequest) ProtoMessage() {}

func (x *InventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryRequest.ProtoReflect.Descriptor instead.
func (*InventoryRequest) Descriptor() ([]byte, []int) {
	return file_gameserver_server_proto_rawDescGZIP(), []int{10}
}

type Inventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Inventory_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Inventory) Reset() {
	*x = Inventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Inventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inventory) ProtoMessage() {}

func (x *Inventory) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inventory.ProtoReflect.Descriptor instead.
func (*Inventory) Descriptor() ([]byte, []int) {
	return file_gameserver_server_proto_rawDescGZIP(), []int{11}
}

func (x *Inventory) GetItems() []*Inventory_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type InventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inventory *Inventory `protobuf:"bytes,1,opt,name=inventory,proto3" json:"inventory,omitempty"`
	Round     int64      `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
}

func (x *InventoryResponse) Reset() {
	*x = InventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryResponse) ProtoMessage() {}

func (x *InventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryResponse.ProtoReflect.Descriptor instead.
func (*InventoryResponse) Descriptor() ([]byte, []int) {
	return file_gameserver_server_proto_rawDescGZIP(), []int{12}
}

func (x *InventoryResponse) GetInventory() *Inventory {
	if x != nil {
		return x.Inventory
	}
	return nil
}

func (x *InventoryResponse) GetRound() int64 {
	if x != nil {
		return x.Round
	}
	return 0
}

type ClientEvent_KeysPressed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeysPressed    []int32 `protobuf:"varint,1,rep,packed,name=keys_pressed,json=keysPressed,proto3" json:"keys_pressed,omitempty"`
	NewKeysPressed []int32 `protobuf:"varint,2,rep,packed,name=new_keys_pressed,json=newKeysPressed,proto3" json:"new_keys_pressed,omitempty"`
}

func (x *ClientEvent_KeysPressed) Reset() {
	*x = ClientEvent_KeysPressed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_server_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientEvent_KeysPressed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientEvent_KeysPressed) ProtoMessage() {}

func (x *ClientEvent_KeysPressed) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_server_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientEvent_KeysPressed.ProtoReflect.Descriptor instead.
func (*ClientEvent_KeysPressed) Descriptor() ([]byte, []int) {
	return file_gameserver_server_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ClientEvent_KeysPressed) GetKeysPressed() []int32 {
	if x != nil {
		return x.KeysPressed
	}
	return nil
}

func (x *ClientEvent_KeysPressed) GetNewKeysPressed() []int32 {
	if x != nil {
		return x.NewKeysPressed
	}
	return nil
}

type Inventory_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Important bool   `protobuf:"varint,2,opt,name=important,proto3" json:"important,omitempty"`
}

func (x *Inventory_Item) Reset() {
	*x = Inventory_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gameserver_server_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Inventory_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inventory_Item) ProtoMessage() {}

func (x *Inventory_Item) ProtoReflect() protoreflect.Message {
	mi := &file_gameserver_server_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inventory_Item.ProtoReflect.Descriptor instead.
func (*Inventory_Item) Descriptor() ([]byte, []int) {
	return file_gameserver_server_proto_rawDescGZIP(), []int{11, 0}
}

func (x *Inventory_Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Inventory_Item) GetImportant() bool {
	if x != nil {
		return x.Important
	}
	return false
}

var File_gameserver_server_proto protoreflect.FileDescriptor

var file_gameserver_server_proto_rawDesc = []byte{
	0x0a, 0x17, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x0c, 0x6b, 0x65, 0x79, 0x73, 0x5f, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x50, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x52,
	0x0b, 0x6b, 0x65, 0x79, 0x73, 0x50, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x1a, 0x5a, 0x0a, 0x0b,
	0x4b, 0x65, 0x79, 0x73, 0x50, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6b,
	0x65, 0x79, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0b, 0x6b, 0x65, 0x79, 0x73, 0x50, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x6e, 0x65, 0x77, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x4b, 0x65, 0x79,
	0x73, 0x50, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x22, 0x5f, 0x0a, 0x12, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22, 0x24, 0x0a, 0x0e, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x5a, 0x0a, 0x0b, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61,
	0x76, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x67,
	0x61, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x3f, 0x0a, 0x05, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x01, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x67,
	0x12, 0x0c, 0x0a, 0x01, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x62, 0x12, 0x0c,
	0x0a, 0x01, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x61, 0x22, 0xb3, 0x01, 0x0a,
	0x0b, 0x41, 0x72, 0x63, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x72, 0x63, 0x61, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x06, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x22,
	0x41, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x53,
	0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x57, 0x4f, 0x4e, 0x10,
	0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x4c, 0x4f, 0x53, 0x54,
	0x10, 0x02, 0x22, 0x83, 0x01, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x3a, 0x0a, 0x0c, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x0b, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x0c,
	0x61, 0x72, 0x63, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x41, 0x72, 0x63, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x61, 0x72, 0x63,
	0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x09, 0x67, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x77, 0x0a, 0x09, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x38, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6e, 0x74,
	0x22, 0x5e, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x32, 0xe8, 0x01, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x17,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x28, 0x01, 0x30, 0x01, 0x12, 0x4b,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xa2, 0x01, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x0b,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x34, 0x74, 0x2d, 0x62, 0x75,
	0x74, 0x2d, 0x73, 0x34, 0x64, 0x2f, 0x63, 0x74, 0x66, 0x63, 0x75, 0x70, 0x2d, 0x32, 0x30, 0x32,
	0x34, 0x2d, 0x69, 0x67, 0x72, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f,
	0x67, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0xa2, 0x02, 0x03, 0x47, 0x58, 0x58,
	0xaa, 0x02, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0xca, 0x02, 0x0a,
	0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0xe2, 0x02, 0x16, 0x47, 0x61, 0x6d,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gameserver_server_proto_rawDescOnce sync.Once
	file_gameserver_server_proto_rawDescData = file_gameserver_server_proto_rawDesc
)

func file_gameserver_server_proto_rawDescGZIP() []byte {
	file_gameserver_server_proto_rawDescOnce.Do(func() {
		file_gameserver_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_gameserver_server_proto_rawDescData)
	})
	return file_gameserver_server_proto_rawDescData
}

var file_gameserver_server_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gameserver_server_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_gameserver_server_proto_goTypes = []interface{}{
	(ArcadeState_Result)(0),         // 0: gameserver.ArcadeState.Result
	(*PingRequest)(nil),             // 1: gameserver.PingRequest
	(*PingResponse)(nil),            // 2: gameserver.PingResponse
	(*ClientEvent)(nil),             // 3: gameserver.ClientEvent
	(*ClientEventRequest)(nil),      // 4: gameserver.ClientEventRequest
	(*EngineSnapshot)(nil),          // 5: gameserver.EngineSnapshot
	(*DialogState)(nil),             // 6: gameserver.DialogState
	(*Color)(nil),                   // 7: gameserver.Color
	(*ArcadeState)(nil),             // 8: gameserver.ArcadeState
	(*GameEvent)(nil),               // 9: gameserver.GameEvent
	(*ServerEvent)(nil),             // 10: gameserver.ServerEvent
	(*InventoryRequest)(nil),        // 11: gameserver.InventoryRequest
	(*Inventory)(nil),               // 12: gameserver.Inventory
	(*InventoryResponse)(nil),       // 13: gameserver.InventoryResponse
	(*ClientEvent_KeysPressed)(nil), // 14: gameserver.ClientEvent.KeysPressed
	(*Inventory_Item)(nil),          // 15: gameserver.Inventory.Item
}
var file_gameserver_server_proto_depIdxs = []int32{
	14, // 0: gameserver.ClientEvent.keys_pressed:type_name -> gameserver.ClientEvent.KeysPressed
	3,  // 1: gameserver.ClientEventRequest.event:type_name -> gameserver.ClientEvent
	0,  // 2: gameserver.ArcadeState.result:type_name -> gameserver.ArcadeState.Result
	7,  // 3: gameserver.ArcadeState.screen:type_name -> gameserver.Color
	6,  // 4: gameserver.GameEvent.dialog_state:type_name -> gameserver.DialogState
	8,  // 5: gameserver.GameEvent.arcade_state:type_name -> gameserver.ArcadeState
	5,  // 6: gameserver.ServerEvent.snapshot:type_name -> gameserver.EngineSnapshot
	9,  // 7: gameserver.ServerEvent.game_event:type_name -> gameserver.GameEvent
	15, // 8: gameserver.Inventory.items:type_name -> gameserver.Inventory.Item
	12, // 9: gameserver.InventoryResponse.inventory:type_name -> gameserver.Inventory
	1,  // 10: gameserver.GameServerService.Ping:input_type -> gameserver.PingRequest
	4,  // 11: gameserver.GameServerService.ProcessEvent:input_type -> gameserver.ClientEventRequest
	11, // 12: gameserver.GameServerService.GetInventory:input_type -> gameserver.InventoryRequest
	2,  // 13: gameserver.GameServerService.Ping:output_type -> gameserver.PingResponse
	10, // 14: gameserver.GameServerService.ProcessEvent:output_type -> gameserver.ServerEvent
	13, // 15: gameserver.GameServerService.GetInventory:output_type -> gameserver.InventoryResponse
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_gameserver_server_proto_init() }
func file_gameserver_server_proto_init() {
	if File_gameserver_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gameserver_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EngineSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DialogState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Color); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArcadeState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Inventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_server_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientEvent_KeysPressed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gameserver_server_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Inventory_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gameserver_server_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*ServerEvent_Snapshot)(nil),
		(*ServerEvent_GameEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gameserver_server_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gameserver_server_proto_goTypes,
		DependencyIndexes: file_gameserver_server_proto_depIdxs,
		EnumInfos:         file_gameserver_server_proto_enumTypes,
		MessageInfos:      file_gameserver_server_proto_msgTypes,
	}.Build()
	File_gameserver_server_proto = out.File
	file_gameserver_server_proto_rawDesc = nil
	file_gameserver_server_proto_goTypes = nil
	file_gameserver_server_proto_depIdxs = nil
}
