syntax = "proto3";
package gameserver;

option go_package = "gameserver";

message PingRequest {
}

message PingResponse {
}

message ClientEvent {
  message KeysPressed {
    repeated int32 keys_pressed = 1;
    repeated int32 new_keys_pressed = 2;
  }

  KeysPressed keys_pressed = 1;
}

message ClientEventRequest {
  ClientEvent event = 1;
  string checksum = 2;
}

message EngineSnapshot {
  bytes data = 1;
}

message DialogState {
  bool finished = 1;
  bool gave_item = 2;
  string text = 3;
}

message Color {
  uint32 r = 1;
  uint32 g = 2;
  uint32 b = 3;
  uint32 a = 4;
}

message ArcadeState {
  enum Result {
    RESULT_UNSPECIFIED = 0;
    RESULT_WON = 1;
    RESULT_LOST = 2;
  }
  Result result = 1;
  repeated Color screen = 2;
}

message GameEvent {
  DialogState dialog_state = 1;
  ArcadeState arcade_state = 2;
}

message ServerEvent {
  oneof event {
    EngineSnapshot snapshot = 1;
    GameEvent game_event = 2;
  }
}

message InventoryRequest {
}

message Inventory {
  message Item {
    string name = 1;
    bool important = 2;
  }

  repeated Item items = 1;
}

message InventoryResponse {
  Inventory inventory = 1;
  int64 round = 2;
}

service GameServerService {
  rpc Ping(PingRequest) returns (PingResponse);
  rpc ProcessEvent(stream ClientEventRequest) returns (stream ServerEvent);
  rpc GetInventory(InventoryRequest) returns (InventoryResponse);
}
